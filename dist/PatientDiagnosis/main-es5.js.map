{"version":3,"sources":["$_lazy_route_resource lazy namespace object","src/app/app.component.html","src/app/examinations/examination-list/examination-list.component.html","src/app/examinations/examination/examination.component.html","src/app/examinations/examinations.component.html","src/app/menu/menu.component.html","src/app/patients/patient-list/patient-list.component.html","src/app/patients/patient/patient.component.html","src/app/patients/patients.component.html","src/app/statistics/statistics.component.html","node_modules/tslib/tslib.es6.js","src/app/app-routing.module.ts","src/app/app.component.css","src/app/app.component.ts","src/app/app.module.ts","src/app/examinations/examination-list/examination-list.component.css","src/app/examinations/examination-list/examination-list.component.ts","src/app/examinations/examination/examination.component.css","src/app/examinations/examination/examination.component.ts","src/app/examinations/examinations.component.css","src/app/examinations/examinations.component.ts","src/app/menu/menu.component.css","src/app/menu/menu.component.ts","src/app/patients/patient-list/patient-list.component.css","src/app/patients/patient-list/patient-list.component.ts","src/app/patients/patient/patient.component.css","src/app/patients/patient/patient.component.ts","src/app/patients/patients.component.css","src/app/patients/patients.component.ts","src/app/service/examination.service.ts","src/app/service/examinations-resolver.service.ts","src/app/service/patient.service.ts","src/app/service/patients-resolver.service.ts","src/app/service/statistics.service.ts","src/app/statistics/statistics.component.css","src/app/statistics/statistics.component.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<mat-toolbar color=\\\"primary\\\">\\n  <mat-toolbar-row>\\n    <h3>Patient Diagnosis System</h3>\\n    <span class=\\\"example-spacer\\\"></span>\\n    <div>\\n      <a mat-button [routerLink]=\\\"'/observations'\\\"> Observations </a>\\n      <a mat-button [routerLink]=\\\"'/patients'\\\"> Patients </a>\\n      <a mat-button [routerLink]=\\\"'/statistics'\\\"> Statistics </a>\\n    </div>\\n  </mat-toolbar-row>\\n</mat-toolbar>\\n<router-outlet></router-outlet>\\n\"","export default \"<!-- <table class=\\\"table table-hover\\\">\\n  <tr *ngFor=\\\"let exam of service.list\\\">\\n    <td (click)=\\\"populateForm(exam)\\\">{{exam.id}}-{{exam.infraction}}</td>\\n    <td (click)=\\\"populateForm(exam)\\\">FistTia:{{exam.firstTia}}</td>\\n    <td><button (click)=\\\"onDelete(exam.id)\\\" class=\\\"btn btn-sm btn-outline-danger\\\">X</button></td>\\n  </tr>\\n</table> -->\\n<div class=\\\"m-5\\\">\\n  <h1 class=\\\"mb-3\\\">Observations:</h1>\\n  <table [hidden]=\\\"!showTable\\\" datatable [dtOptions]=\\\"dtOptions\\\" class=\\\"row-border hover m-5\\\">\\n    <thead>\\n      <tr>\\n        <th>Observation Id</th>\\n        <th>Patient Id</th>\\n        <th>Atrial Fibrillation</th>\\n        <th>Body weakness</th>\\n        <th>First TIA</th>\\n        <th>Gait disturbance</th>\\n        <th>High glucose (≥15 mmol/L)</th>\\n        <th>Infraction (on computed tomography)</th>\\n        <th>Initial DBP</th>\\n        <th>Speech difficulties</th>\\n        <th>Vertigo</th>\\n        <th>firstClassPrediction</th>\\n        <th>secondClassPrediction</th>\\n        <th>TIA occured in two weeks</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let exam of examinations\\\">\\n        <td>{{ exam.id }}</td>\\n        <td>{{ exam.patientId }}</td>\\n        <td>{{ exam.atrialFibrillation }}</td>\\n        <td>{{ exam.bodyWeakness }}</td>\\n        <td>{{ exam.firstTia }}</td>\\n        <td>{{ exam.gaitDisturb }}</td>\\n        <td>{{ exam.highGlucose }}</td>\\n        <td>{{ exam.infraction }}</td>\\n        <td>{{ exam.initialDbp }}</td>\\n        <td>{{ exam.speechDif }}</td>\\n        <td>{{ exam.vertigo }}</td>\\n        <td>{{ exam.firstClassPrediction }}</td>\\n        <td>{{ exam.secondClassPrediction }}</td>\\n        <td>{{ exam.tiaInTwoWeeksOccured }}</td>\\n      </tr>\\n    </tbody>\\n    <tfoot>\\n      <tr>\\n        <th>Observation Id</th>\\n        <th>Patient Id</th>\\n        <th>Atrial Fibrillation</th>\\n        <th>Body weakness</th>\\n        <th>First TIA</th>\\n        <th>Gait disturbance</th>\\n        <th>High glucose (≥15 mmol/L)</th>\\n        <th>Infraction (on computed tomography)</th>\\n        <th>Initial DBP</th>\\n        <th>Speech difficulties</th>\\n        <th>Vertigo</th>\\n        <th>firstClassPrediction</th>\\n        <th>secondClassPrediction</th>\\n        <th>TIA occured in two weeks</th>\\n      </tr>\\n    </tfoot>\\n  </table>\\n</div>\\n\"","export default \"<form #form=\\\"ngForm\\\" (submit)=\\\"onSubmit(form)\\\" autocomplete=\\\"off\\\" class=\\\"m-5\\\">\\n  <input type=\\\"hidden\\\" name=\\\"id\\\" #id=\\\"ngModel\\\" [(ngModel)]=\\\"service.formdata.id\\\"/>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"column\\\">\\n      <div class=\\\"form-group\\\">\\n        <label>Patient Identifier</label>\\n        <input name=\\\"patientId\\\" #patientId=\\\"ngModel\\\" [(ngModel)]=\\\"service.formdata.patientId\\\" class=\\\"form-check-input\\\" type=\\\"number\\\" readonly>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label>TIA occured (fill in two weeks after the TIA occurrence)</label>\\n        <input name=\\\"tiaInTwoWeeksOccured\\\" #tiaInTwoWeeksOccured=\\\"ngModel\\\" [(ngModel)]=\\\"service.formdata.tiaInTwoWeeksOccured\\\" class=\\\"form-control\\\" type=\\\"checkbox\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"column\\\">\\n      <div class=\\\"form-group\\\">\\n        <label>firstClassPrediction</label>\\n        <input name=\\\"firstClassPrediction\\\" #firstClassPrediction=\\\"ngModel\\\" [(ngModel)]=\\\"service.formdata.firstClassPrediction\\\" class=\\\"form-control\\\" type=\\\"number\\\" disabled>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label>secondClassPrediction</label>\\n        <input name=\\\"secondClassPrediction\\\" #secondClassPrediction=\\\"ngModel\\\" [(ngModel)]=\\\"service.formdata.secondClassPrediction\\\" class=\\\"form-control\\\" type=\\\"number\\\" disabled>\\n      </div>\\n    </div>\\n  </div>\\n  <mat-tab-group>\\n    <mat-tab label=\\\"Examinations\\\">\\n      <div class=\\\"form-group\\\">\\n        <label>Infraction (on computed tomography)</label>\\n        <input name=\\\"infraction\\\" #infraction=\\\"ngModel\\\" [(ngModel)]=\\\"service.formdata.infraction\\\" class=\\\"form-control\\\" type=\\\"number\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label>Initial DBP</label>\\n        <input name=\\\"initialDbp\\\" #initialDbp=\\\"ngModel\\\" [(ngModel)]=\\\"service.formdata.initialDbp\\\" class=\\\"form-control\\\" type=\\\"number\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label>Atrial Fibrillation</label>\\n        <input name=\\\"atrialFibrillation\\\" #atrialFibrillation=\\\"ngModel\\\" [(ngModel)]=\\\"service.formdata.atrialFibrillation\\\" class=\\\"form-check-input\\\" type=\\\"checkbox\\\">\\n      </div>\\n    </mat-tab>\\n    <mat-tab label=\\\"First interview with a patient\\\">\\n      <div class=\\\"form-group\\\">\\n        <label>Speech difficulties</label>\\n        <input name=\\\"speechDif\\\" #speechDif=\\\"ngModel\\\" [(ngModel)]=\\\"service.formdata.speechDif\\\" class=\\\"form-check-input\\\" type=\\\"checkbox\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label>Vertigo</label>\\n        <input name=\\\"vertigo\\\" #vertigo=\\\"ngModel\\\" [(ngModel)]=\\\"service.formdata.vertigo\\\" class=\\\"form-check-input\\\" type=\\\"checkbox\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label>Body weakness</label>\\n        <input name=\\\"bodyWeakness\\\" #bodyWeakness=\\\"ngModel\\\" [(ngModel)]=\\\"service.formdata.bodyWeakness\\\" class=\\\"form-check-input\\\" type=\\\"checkbox\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label>First TIA</label>\\n        <input name=\\\"firstTia\\\" #firstTia=\\\"ngModel\\\" [(ngModel)]=\\\"service.formdata.firstTia\\\" class=\\\"form-check-input\\\" type=\\\"checkbox\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label>Gait disturbance</label>\\n        <input name=\\\"gaitDisturb\\\" #gaitDisturb=\\\"ngModel\\\" [(ngModel)]=\\\"service.formdata.gaitDisturb\\\" class=\\\"form-check-input\\\" type=\\\"checkbox\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label>High glucose (≥15 mmol/L)</label>\\n        <input name=\\\"highGlucose\\\" #highGlucose=\\\"ngModel\\\" [(ngModel)]=\\\"service.formdata.highGlucose\\\" class=\\\"form-check-input\\\" type=\\\"checkbox\\\">\\n      </div>\\n    </mat-tab>\\n  </mat-tab-group>\\n  <div class=\\\"form-group btn-group w-100 m-5\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"backClicked()\\\">BACK</button>\\n    <button type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\" class=\\\"btn btnprimary\\\">SUBMIT</button>\\n  </div>\\n</form>\\n\"","export default \"<div class=\\\"jumbotron\\\">\\n  <h1 class=\\\"display-4 text-center\\\">Examination Register</h1>\\n  <hr>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-5\\\">\\n      <app-examination>\\n\\n      </app-examination>\\n    </div>\\n    <div class=\\\"col-md-5\\\">\\n      <app-examination-list>\\n\\n      </app-examination-list>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<p>menu works!</p>\\n\"","export default \"<!-- <table class=\\\"table table-hover\\\">\\n  <tr *ngFor=\\\"let exam of service.list\\\">\\n    <td (click)=\\\"populateForm(exam)\\\">{{exam.id}}-{{exam.infraction}}</td>\\n    <td (click)=\\\"populateForm(exam)\\\">FistTia:{{exam.firstTia}}</td>\\n    <td><button (click)=\\\"onDelete(exam.id)\\\" class=\\\"btn btn-sm btn-outline-danger\\\">X</button></td>\\n  </tr>\\n</table> -->\\n<app-patient *ngIf=\\\"editPatient\\\" (backClick)=\\\"toogleEditPatient()\\\" (patientAdded)=\\\"onPatientAdded($event)\\\" (patientUpdated)=\\\"onPatientUpdated($event)\\\" [patientId]=\\\"selectedPatientId\\\">\\n</app-patient>\\n<app-examination *ngIf=\\\"editPatientExamination\\\" (backClick)=\\\"toogleEditPatientExaminations()\\\"[examination]=\\\"selectedPatientExamination\\\" [patientId]=\\\"selectedPatientId\\\">\\n</app-examination>\\n<div class=\\\"m-5\\\" *ngIf=\\\"!editPatientExamination && !editPatient\\\">\\n  <div class=\\\"w-100 m-5\\\">\\n    <h1 class=\\\"mb-3 d-inline-block w-50\\\">Patients:</h1>\\n    <button class=\\\"d-inline-block w-50 btn btn-info\\\" (click)=\\\"showPatient()\\\">Add new patient</button>\\n  </div>\\n  <table [hidden]=\\\"!showTable\\\" datatable [dtOptions]=\\\"dtOptions\\\" class=\\\"row-border hover m-5\\\">\\n    <thead>\\n      <tr>\\n        <th>Patient Id</th>\\n        <th>Surname</th>\\n        <th>Age</th>\\n        <th>Observations</th>\\n        <th>Edit Patient</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let patient of patients\\\">\\n        <td>{{ patient.id }}</td>\\n        <td>{{ patient.surname }}</td>\\n        <td>{{ patient.age }}</td>\\n        <td>\\n          <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"showPatientExaminations(patient)\\\">Observations</button>\\n        </td>\\n        <td>\\n          <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"showPatient(patient)\\\">Edit</button>\\n        </td>\\n      </tr>\\n    </tbody>\\n    <tfoot>\\n      <tr>\\n        <th>Patient Id</th>\\n        <th>Surname</th>\\n        <th>Age</th>\\n        <th>Observations</th>\\n        <th>Edit Patient</th>\\n      </tr>\\n    </tfoot>\\n    </table>\\n</div>\\n\"","export default \"<form #form=\\\"ngForm\\\" (submit)=\\\"onSubmit(form)\\\" autocomplete=\\\"off\\\" class=\\\"m-5\\\">\\n  <input type=\\\"hidden\\\" name=\\\"id\\\" #id=\\\"ngModel\\\" [(ngModel)]=\\\"service.formdata.id\\\"/>\\n  <div class=\\\"form-group\\\" [hidden]=\\\"service.formdata.id! == null\\\">\\n    <label>Patient Id</label>\\n    <input name=\\\"id\\\" #id=\\\"ngModel\\\" [(ngModel)]=\\\"service.formdata.id\\\" class=\\\"form-check-input\\\" type=\\\"number\\\" readonly>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Surname</label>\\n    <input name=\\\"surname\\\" #surname=\\\"ngModel\\\" [(ngModel)]=\\\"service.formdata.surname\\\" class=\\\"form-check-input\\\" type=\\\"text\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Age</label>\\n    <input name=\\\"age\\\" #age=\\\"ngModel\\\" [(ngModel)]=\\\"service.formdata.age\\\" class=\\\"form-check-input\\\" type=\\\"number\\\">\\n  </div>\\n  <div class=\\\"form-group btn-group w-100 m-5\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"backClicked()\\\">BACK</button>\\n    <button type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\" class=\\\"btn btnprimary\\\">SUBMIT</button>\\n  </div>\\n</form>\\n\"","export default \"<div class=\\\"jumbotron\\\">\\n  <h1 class=\\\"display-4 text-center\\\">Patient Register</h1>\\n  <hr>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-5\\\">\\n      <app-patient>\\n\\n      </app-patient>\\n    </div>\\n    <div class=\\\"col-md-5\\\">\\n      <app-patient-list>\\n\\n      </app-patient-list>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"m-5 w-100\\\">\\n  <div class=\\\"w-25 d-inline-block mx-5 align-top\\\">\\n    <h2>FirstClassPrediction frequency:</h2>\\n    <ngx-charts-pie-chart [results]=\\\"predictionsFrequency\\\" [labels]=\\\"true\\\" [legend]=\\\"true\\\" [gradient]=\\\"true\\\">\\n    </ngx-charts-pie-chart>\\n  </div>\\n  <div class=\\\"w-25 d-inline-block mx-5 align-top\\\">\\n    <h2>Age frequency:</h2>\\n    <ngx-charts-bar-vertical [results]=\\\"ageFrequency\\\" [gradient]=\\\"true\\\" [xAxis]=\\\"true\\\" [yAxis]=\\\"true\\\" [xAxisLabel]=\\\"'Ages range'\\\" [showXAxisLabel]=\\\"true\\\" [showYAxisLabel]=\\\"true\\\" [yAxisLabel]=\\\"'Frequency'\\\">\\n    </ngx-charts-bar-vertical>\\n  </div>\\n  <div class=\\\"w-30 d-inline-block mx-5 align-top\\\">\\n    <h2>Tia occured frequency:</h2>\\n    <ngx-charts-pie-grid [results]=\\\"tiaOccuredFrequency\\\">\\n    </ngx-charts-pie-grid>\\n  </div>\\n  <div class=\\\"w-50 d-inline-block p-5\\\" style=\\\"max-height: 250px;\\\">\\n    <h2>Observations ratio - TIA occured:</h2>\\n    <ngx-charts-bar-horizontal [results]=\\\"observationsRatioTiaOccured\\\" [gradient]=\\\"true\\\" [xScaleMax]=1 [showDataLabel]=\\\"true\\\" [xAxis]=\\\"true\\\" [yAxis]=\\\"true\\\" [yAxisLabel]=\\\"'Observations'\\\" [showYAxisLabel]=\\\"true\\\" [xAxisLabel]=\\\"'Ratio'\\\" [showXAxisLabel]=\\\"true\\\">\\n    </ngx-charts-bar-horizontal>\\n  </div>\\n  <div class=\\\"w-50 d-inline-block p-5\\\" style=\\\"max-height: 250px;\\\">\\n    <h2>Observations ratio - TIA not occured:</h2>\\n    <ngx-charts-bar-horizontal [results]=\\\"observationsRatioTiaNotOccured\\\" [gradient]=\\\"true\\\" [xScaleMax]=1 [showDataLabel]=\\\"true\\\" [xAxis]=\\\"true\\\" [yAxis]=\\\"true\\\" [yAxisLabel]=\\\"'Observations'\\\" [showYAxisLabel]=\\\"true\\\" [xAxisLabel]=\\\"'Ratio'\\\" [showXAxisLabel]=\\\"true\\\">\\n    </ngx-charts-bar-horizontal>\\n  </div>\\n</div>\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ExaminationListComponent } from 'src/app/examinations/examination-list/examination-list.component';\r\nimport { PatientListComponent } from 'src/app/patients/patient-list/patient-list.component';\r\nimport { StatisticsComponent } from 'src/app/statistics/statistics.component';\r\nimport { MenuComponent } from 'src/app/menu/menu.component';\r\nimport { ExaminationsResolverService } from './service/examinations-resolver.service';\r\nimport { PatientsResolverService } from './service/patients-resolver.service';\r\n\r\nconst routes: Routes = [\r\n    {\r\n      path: '',\r\n      redirectTo: 'patients',\r\n      pathMatch: 'full'\r\n    },\r\n    {\r\n        path: 'observations',\r\n        component: ExaminationListComponent,\r\n        resolve: { examinations: ExaminationsResolverService }\r\n    },\r\n    {\r\n      path: 'patients',\r\n      component: PatientListComponent,\r\n      resolve: { patients: PatientsResolverService }\r\n    },\r\n    {\r\n        path: 'statistics',\r\n        component: StatisticsComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","export default \".example-spacer {\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFjO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1zcGFjZXIge1xyXG4gIGZsZXg6IDEgMSBhdXRvO1xyXG59XHJcbiJdfQ== */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'PatientDiagnosis';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { MatToolbarModule, MatIconModule, MatSidenavModule, MatListModule, MatButtonModule } from '@angular/material';\nimport {MatTabsModule} from '@angular/material/tabs';\n\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { DataTablesModule } from 'angular-datatables';\n\nimport { AppComponent } from './app.component';\nimport { ExaminationsComponent } from './examinations/examinations.component';\nimport { ExaminationComponent } from './examinations/examination/examination.component';\nimport { ExaminationListComponent } from './examinations/examination-list/examination-list.component';\nimport { ExaminationService } from './service/examination.service';\nimport { PatientsComponent } from './patients/patients.component';\nimport { PatientComponent } from './patients/patient/patient.component';\nimport { PatientListComponent } from './patients/patient-list/patient-list.component';\nimport { PatientService } from './service/patient.service';\nimport { StatisticsService } from './service/statistics.service';\nimport { MenuComponent } from './menu/menu.component';\nimport { StatisticsComponent } from './statistics/statistics.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ExaminationsComponent,\n    ExaminationComponent,\n    ExaminationListComponent,\n    PatientsComponent,\n    PatientComponent,\n    PatientListComponent,\n    MenuComponent,\n    StatisticsComponent\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatButtonModule,\n    MatIconModule,\n    DataTablesModule,\n    NgxChartsModule,\n    MatTabsModule\n  ],\n  providers: [ExaminationService, PatientService, StatisticsService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V4YW1pbmF0aW9ucy9leGFtaW5hdGlvbi1saXN0L2V4YW1pbmF0aW9uLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ExaminationService } from 'src/app/service/examination.service';\nimport { Examination } from 'src/app/model/examination.model';\nimport { ToastrService } from 'ngx-toastr';\nimport { ActivatedRoute } from '@angular/router';\ndeclare var jquery: any;\n\n@Component({\n  selector: 'app-examination-list',\n  templateUrl: './examination-list.component.html',\n  styleUrls: ['./examination-list.component.css']\n})\nexport class ExaminationListComponent implements OnInit {\n  dtOptions: DataTables.Settings = {};\n  public examinations: Examination[];\n  public showTable: boolean;\n\n  constructor(\n    private service: ExaminationService,\n    private toastr: ToastrService,\n    private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.activatedRoute.data.subscribe(data => this.examinations = data.examinations as Examination[]);\n    this.showTable = false;\n    this.dtOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 10,\n      deferRender: true,\n      initComplete: (settings, json) => {\n        this.showTable = true;\n      }\n    };\n  }\n\n  populateForm(exam: Examination) {\n    this.service.formdata = Object.assign({}, exam);\n  }\n\n  refreshList() {\n    this.service.getPatients().subscribe(data => this.examinations = data as Examination[]);\n  }\n\n  onDelete(id: number) {\n    if (confirm('Are you sure to delete this record?')){\n      this.service.deleteExamination(id).subscribe(res => {\n        this.refreshList();\n        this.toastr.warning('Deleted successfully', 'EXAM deleted');\n      });\n    }\n  }\n}\n","export default \"input{\\r\\n  margin-top: 5px;\\r\\n  margin-left: 15px;\\r\\n}\\r\\n\\r\\nlabel {\\r\\n  margin-top: 5px;\\r\\n}\\r\\n\\r\\n* {\\r\\n  box-sizing: border-box;\\r\\n}\\r\\n\\r\\n.column {\\r\\n  float: left;\\r\\n  width: 50%;\\r\\n  padding: 10px;\\r\\n  height: 300px;\\r\\n}\\r\\n\\r\\n.row:after {\\r\\n  content: \\\"\\\";\\r\\n  display: table;\\r\\n  clear: both;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZXhhbWluYXRpb25zL2V4YW1pbmF0aW9uL2V4YW1pbmF0aW9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFlO0VBQ2YsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxVQUFVO0VBQ1YsYUFBYTtFQUNiLGFBQWE7QUFDZjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxjQUFjO0VBQ2QsV0FBVztBQUNiIiwiZmlsZSI6InNyYy9hcHAvZXhhbWluYXRpb25zL2V4YW1pbmF0aW9uL2V4YW1pbmF0aW9uLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpbnB1dHtcclxuICBtYXJnaW4tdG9wOiA1cHg7XHJcbiAgbWFyZ2luLWxlZnQ6IDE1cHg7XHJcbn1cclxuXHJcbmxhYmVsIHtcclxuICBtYXJnaW4tdG9wOiA1cHg7XHJcbn1cclxuXHJcbioge1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbn1cclxuXHJcbi5jb2x1bW4ge1xyXG4gIGZsb2F0OiBsZWZ0O1xyXG4gIHdpZHRoOiA1MCU7XHJcbiAgcGFkZGluZzogMTBweDtcclxuICBoZWlnaHQ6IDMwMHB4O1xyXG59XHJcblxyXG4ucm93OmFmdGVyIHtcclxuICBjb250ZW50OiBcIlwiO1xyXG4gIGRpc3BsYXk6IHRhYmxlO1xyXG4gIGNsZWFyOiBib3RoO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ExaminationService } from 'src/app/service/examination.service';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Patient } from 'src/app/model/patient.model';\nimport { Examination } from 'src/app/model/examination.model';\nimport { async } from '@angular/core/testing';\nimport { Observable } from 'rxjs';\nimport * as signalR from '@aspnet/signalr';\n\n@Component({\n  selector: 'app-examination',\n  templateUrl: './examination.component.html',\n  styleUrls: ['./examination.component.css']\n})\nexport class ExaminationComponent implements OnInit {\n  @Input() examination: Observable<Examination>;\n  @Input() patientId;\n  @Output() backClick: EventEmitter<any> = new EventEmitter();\n\n  public hubConnection: signalR.HubConnection;\n\n  constructor(\n    private service: ExaminationService,\n    private toastr: ToastrService) {}\n\n\n  ngOnInit() {\n    this.service.formdata = {\n      id: null,\n      patientId: this.patientId,\n      atrialFibrillation: false,\n      bodyWeakness: false,\n      firstTia: false,\n      gaitDisturb: false,\n      highGlucose: false,\n      infraction: 0,\n      initialDbp: 0,\n      speechDif: false,\n      vertigo: false,\n      firstClassPrediction: 0,\n      secondClassPrediction: 0,\n      tiaInTwoWeeksOccured: false\n    };\n\n    this.resetForm();\n    this.startSignalRConnection();\n    this.addPredictionListener();\n  }\n\n  resetForm(form?: NgForm) {\n    if (form != null) {\n      form.resetForm();\n    }\n\n    if (this.examination == null){\n      this.service.formdata = {\n        id: null,\n        patientId: null,\n        atrialFibrillation: false,\n        bodyWeakness: false,\n        firstTia: false,\n        gaitDisturb: false,\n        highGlucose: false,\n        infraction: 0,\n        initialDbp: 0,\n        speechDif: false,\n        vertigo: false,\n        firstClassPrediction: 0,\n        secondClassPrediction: 0,\n        tiaInTwoWeeksOccured: false\n      };\n    } else {\n      this.examination.subscribe((res) => this.service.formdata = res);\n    }\n  }\n\n  startSignalRConnection() {\n    this.hubConnection = new signalR.HubConnectionBuilder()\n                                    .withUrl('https://localhost:44319/predictions')\n                                    .build();\n\n    this.hubConnection\n      .start()\n      .then(() => console.log('Connection started'))\n      .catch(err => console.log('Error while starting connection: ' + err))\n  }\n\n  addPredictionListener() {\n    this.hubConnection.on('prediction', (prediction) => {\n      const predictionObject = JSON.parse(prediction);\n      this.service.formdata.firstClassPrediction = predictionObject.FirstClassPrediction.toFixed(2);\n      this.service.formdata.secondClassPrediction = predictionObject.SecondClassPrediction.toFixed(2);\n      console.log(predictionObject);\n    });\n  }\n\n  onSubmit(form: NgForm) {\n    console.log(form.value);\n    if (form.value.id == null) {\n      delete form.value.id;\n      this.insertRecord(form);\n    } else {\n      this.updateRecord(form);\n    }\n    // this.resetForm(form);\n    this.service.refreshList();\n  }\n\n  insertRecord(form: NgForm) {\n    this.service.postExamination(form.value).subscribe(res => {\n      this.toastr.success('Inserted successfully', 'EXAM register');\n    });\n  }\n\n  updateRecord(form: NgForm) {\n    this.service.putExamination(form.value).subscribe(res => {\n      this.toastr.success('Updated successfully', 'EXAM updated');\n    });\n  }\n\n  backClicked(){\n    this.backClick.emit(null);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V4YW1pbmF0aW9ucy9leGFtaW5hdGlvbnMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-examinations',\n  templateUrl: './examinations.component.html',\n  styleUrls: ['./examinations.component.css']\n})\nexport class ExaminationsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lbnUvbWVudS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhdGllbnRzL3BhdGllbnQtbGlzdC9wYXRpZW50LWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { PatientService } from 'src/app/service/patient.service';\nimport { ExaminationService } from 'src/app/service/examination.service';\nimport { Patient } from 'src/app/model/patient.model';\nimport { Examination } from 'src/app/model/examination.model';\nimport { ToastrService } from 'ngx-toastr';\nimport { ActivatedRoute } from '@angular/router';\ndeclare var jquery: any;\n\n@Component({\n  selector: 'app-patient-list',\n  templateUrl: './patient-list.component.html',\n  styleUrls: ['./patient-list.component.css']\n})\nexport class PatientListComponent implements OnInit {\n  dtOptions: DataTables.Settings = {};\n  public patients: Patient[];\n  public showTable: boolean;\n  editPatientExamination = false;\n  editPatient = false;\n  selectedPatientId = null;\n  selectedPatientExamination: Examination = null;\n\n  constructor(\n    private patientService: PatientService,\n    private examinationService: ExaminationService,\n    private toastr: ToastrService,\n    private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.activatedRoute.data.subscribe(data => this.patients = data.patients as Patient[])\n    this.showTable = false;\n    this.dtOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 10,\n      deferRender: true,\n      initComplete: (settings, json) => {\n        this.showTable = true;\n      }\n    };\n  }\n\n  populateForm(patient: Patient) {\n    this.patientService.formdata = Object.assign({}, patient);\n  }\n\n  onDelete(id: number) {\n    if (confirm('Are you sure to delete this record?')){\n      this.patientService.deletePatient(id).subscribe(res => {\n        this.refreshList();\n        this.toastr.warning('Deleted successfully', 'PATIENT deleted');\n      });\n    }\n  }\n\n  toogleEditPatientExaminations() {\n    this.editPatientExamination = this.editPatientExamination ? false : true;\n  }\n\n  toogleEditPatient() {\n    this.editPatient = this.editPatient ? false : true;\n  }\n\n  refreshList() {\n    this.patientService.getPatients().subscribe(data => this.patients = data as Patient[]);\n  }\n\n  public showPatientExaminations(patient) {\n    this.selectedPatientId = patient.id;\n    this.selectedPatientExamination = this.examinationService.getByPatient(patient.id);\n    this.toogleEditPatientExaminations();\n  }\n\n  public showPatient(patient) {\n    if (patient) {\n      this.selectedPatientId = patient.id;\n    }\n    else {\n      this.selectedPatientId = undefined;\n    }\n    this.toogleEditPatient();\n  }\n\n  public onPatientAdded(patient) {\n    this.refreshList();\n  }\n\n  public onPatientUpdated(patient) {\n    console.log(patient);\n    const indexToUpdate = this.patients.findIndex(item => item.id === patient.id);\n    this.patients[indexToUpdate] = patient;\n  }\n}\n","export default \"input{\\r\\n  margin: 5px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGF0aWVudHMvcGF0aWVudC9wYXRpZW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2IiLCJmaWxlIjoic3JjL2FwcC9wYXRpZW50cy9wYXRpZW50L3BhdGllbnQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImlucHV0e1xyXG4gIG1hcmdpbjogNXB4O1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { PatientService } from 'src/app/service/patient.service';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-patient',\n  templateUrl: './patient.component.html',\n  styleUrls: ['./patient.component.css']\n})\nexport class PatientComponent implements OnInit {\n  @Input() patientId;\n  @Output() backClick: EventEmitter<any> = new EventEmitter();\n  @Output() patientUpdated: EventEmitter<any> = new EventEmitter();\n  @Output() patientAdded: EventEmitter<any> = new EventEmitter();\n\n  constructor(\n    private service: PatientService,\n    private toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.service.formdata = {\n      id: null,\n      surname: '',\n      age: 0\n    };\n\n    if (this.patientId != undefined) {\n      this.service.getPatient(this.patientId).subscribe(patient => this.service.formdata = patient);\n    }\n\n    this.resetForm();\n  }\n\n  resetForm(form?: NgForm) {\n    if (form != null) {\n      form.resetForm();\n    }\n\n    this.service.formdata = {\n      id: null,\n      surname: '',\n      age: 0\n    };\n  }\n\n  onSubmit(form: NgForm) {\n    if (form.value.id == null) {\n      delete form.value.id;\n      this.insertRecord(form);\n      this.resetForm(form);\n    } else {\n      this.updateRecord(form);\n    }\n    this.service.refreshList();\n  }\n\n  insertRecord(form: NgForm) {\n    this.service.postPatient(form.value).subscribe(res => {\n      this.toastr.success('Inserted successfully', 'PATIENT register');\n      this.patientAdded.emit(form.value);\n    });\n  }\n\n  updateRecord(form: NgForm) {\n    this.service.putPatient(form.value).subscribe(res => {\n      this.toastr.success('Updated successfully', 'PATIENT updated');\n      console.log(form.value);\n      this.patientUpdated.emit(form.value);\n    });\n  }\n\n  backClicked(){\n    this.backClick.emit(null);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhdGllbnRzL3BhdGllbnRzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-patients',\n  templateUrl: './patients.component.html',\n  styleUrls: ['./patients.component.css']\n})\nexport class PatientsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Examination } from '../model/examination.model';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExaminationService {\n  formdata: Examination;\n  list: Examination[];\n  readonly rootURL = 'https://0c9715e4e56f.ngrok.io/api/examinations/'\n\n  constructor(private http: HttpClient) { }\n\n  getByPatient(id: any): any {\n    return this.http.get(this.rootURL + 'getByPatient/' + id + '/')\n  }\n\n  postExamination(formData: Examination) {\n    return this.http.post(this.rootURL, formData);\n   }\n\n  putExamination(formData: Examination) {\n  return this.http.put(this.rootURL + formData.id + '/', formData);\n  }\n\n  deleteExamination(id: number) {\n    return this.http.delete(this.rootURL + id + '/');\n    }\n\n  getPatients() {\n    return this.http.get(this.rootURL) as Observable<Examination[]>;\n  }\n\n  refreshList() {\n    this.http.get(this.rootURL)\n      .toPromise().then(res => this.list = res as Examination[]);\n  }\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Examination } from '../model/examination.model';\nimport { ExaminationService } from './examination.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExaminationsResolverService implements Resolve<Examination[]> {\n\n  constructor(private examinationsService: ExaminationService) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Examination[] | import(\"rxjs\").Observable<Examination[]> | Promise<Examination[]> {\n    return this.examinationsService.getPatients();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Patient } from '../model/patient.model';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatientService {\n  formdata: Patient;\n  list: Patient[];\n  readonly rootURL = 'https://0c9715e4e56f.ngrok.io/api/patients/'\n\n  constructor(private http: HttpClient) { }\n\n  postPatient(formData: Patient) {\n    return this.http.post(this.rootURL, formData);\n   }\n\n  putPatient(formData: Patient) {\n  return this.http.put(this.rootURL + formData.id + '/', formData);\n  }\n\n  deletePatient(id: number) {\n    return this.http.delete(this.rootURL + id + '/');\n    }\n\n  getPatients() {\n    return this.http.get(this.rootURL) as Observable<Patient[]>;\n  }\n\n  getPatient(id: number) {\n    return this.http.get(this.rootURL + id + '/') as Observable<Patient>;\n  }\n\n  refreshList() {\n    this.http.get(this.rootURL)\n      .toPromise().then(res => this.list = res as Patient[]);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PatientService } from './patient.service';\nimport { Patient } from '../model/patient.model';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatientsResolverService implements Resolve<Patient[]>{\n\n  constructor(private patientsService: PatientService) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Patient[] | import(\"rxjs\").Observable<Patient[]> | Promise<Patient[]> {\n    return this.patientsService.getPatients();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { PatientService } from 'src/app/service/patient.service';\nimport { ExaminationService } from 'src/app/service/examination.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StatisticsService {\n  readonly rootURL = 'https://0c9715e4e56f.ngrok.io/api/statistics/'\n\n  constructor(private http: HttpClient,\n    private examinationService: ExaminationService,\n    private patientService: PatientService) { }\n\n  getPatients() {\n    this.patientService.refreshList();\n    return this.patientService.list;\n  }\n\n  getExaminations() {\n    this.examinationService.refreshList();\n    return this.examinationService.list;\n  }\n\n  getPredictionsFrequency() {\n    return this.http.get(this.rootURL + 'GetPredictionsFrequency');\n  }\n\n  getAgeFrequency() {\n    return this.http.get(this.rootURL + 'GetAgeFrequency');\n  }\n\n  getTiaOccuredFrequency() {\n    return this.http.get(this.rootURL + 'GetTiaOccuredFrequency');\n  }\n\n  GetObservationsRatioByTiaOccured(occured) {\n    return this.http.get(this.rootURL + 'GetObservationsRatioByTiaOccured/' + occured);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0YXRpc3RpY3Mvc3RhdGlzdGljcy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { StatisticsService } from '../service/statistics.service';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n\n@Component({\n  selector: 'app-statistics',\n  templateUrl: './statistics.component.html',\n  styleUrls: ['./statistics.component.css']\n})\nexport class StatisticsComponent implements OnInit {\n  patients: null;\n  examinations: null;\n  predictionsFrequency: any[];\n  tiaOccuredFrequency: any[];\n  observationsRatioTiaOccured: any[];\n  observationsRatioTiaNotOccured: any[];\n  ageFrequency: any[];\n\n  constructor(private statisticsService: StatisticsService) { }\n\n  ngOnInit() {\n    // this.patients = this.statisticsService.getPatients();\n    // this.examinations = this.statisticsService.getExaminations();\n    this.statisticsService.getPredictionsFrequency()\n      .subscribe(res => {\n        if (res instanceof Array) {\n          this.predictionsFrequency = res.map(prediction => ({name: prediction.roandedPrediction.toString(), value: prediction.frequency.toString()}))\n        }\n      });\n\n    this.statisticsService.getAgeFrequency()\n      .subscribe(res => {\n        if (res instanceof Array) {\n          this.ageFrequency = res.map(age => ({name: `${age.downAgeBoundary}-${age.upAgeBoundary}`, value: age.frequency}));\n        }\n      });\n\n    this.statisticsService.getTiaOccuredFrequency()\n      .subscribe(res => {\n        if (res instanceof Array) {\n          this.tiaOccuredFrequency = res.map(tia => ({name: tia.occured, value: tia.frequency}));\n        }\n      });\n\n    this.statisticsService.GetObservationsRatioByTiaOccured(true)\n      .subscribe(res => {\n        if (res instanceof Array) {\n          this.observationsRatioTiaOccured = res.map(observation => ({name: observation.observationName, value: observation.ratio}));\n        }\n      });\n\n    this.statisticsService.GetObservationsRatioByTiaOccured(false)\n      .subscribe(res => {\n        if (res instanceof Array) {\n          this.observationsRatioTiaNotOccured = res.map(observation => ({name: observation.observationName, value: observation.ratio}));\n        }\n      });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}