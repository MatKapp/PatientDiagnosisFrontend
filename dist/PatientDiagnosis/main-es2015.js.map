{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/examinations/examination-list/examination-list.component.html","./src/app/examinations/examination/examination.component.html","./src/app/examinations/examinations.component.html","./src/app/menu/menu.component.html","./src/app/patients/patient-list/patient-list.component.html","./src/app/patients/patient/patient.component.html","./src/app/patients/patients.component.html","./src/app/statistics/statistics.component.html","./node_modules/tslib/tslib.es6.js","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/examinations/examination-list/examination-list.component.css","./src/app/examinations/examination-list/examination-list.component.ts","./src/app/examinations/examination/examination.component.css","./src/app/examinations/examination/examination.component.ts","./src/app/examinations/examinations.component.css","./src/app/examinations/examinations.component.ts","./src/app/menu/menu.component.css","./src/app/menu/menu.component.ts","./src/app/patients/patient-list/patient-list.component.css","./src/app/patients/patient-list/patient-list.component.ts","./src/app/patients/patient/patient.component.css","./src/app/patients/patient/patient.component.ts","./src/app/patients/patients.component.css","./src/app/patients/patients.component.ts","./src/app/service/examination.service.ts","./src/app/service/examinations-resolver.service.ts","./src/app/service/patient.service.ts","./src/app/service/patients-resolver.service.ts","./src/app/service/statistics.service.ts","./src/app/statistics/statistics.component.css","./src/app/statistics/statistics.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<mat-toolbar color=\\\"primary\\\">\\n  <mat-toolbar-row>\\n    <h3>Patient Diagnosis System</h3>\\n    <span class=\\\"example-spacer\\\"></span>\\n    <div>\\n      <a mat-button [routerLink]=\\\"'/observations'\\\"> Observations </a>\\n      <a mat-button [routerLink]=\\\"'/patients'\\\"> Patients </a>\\n      <a mat-button [routerLink]=\\\"'/statistics'\\\"> Statistics </a>\\n    </div>\\n  </mat-toolbar-row>\\n</mat-toolbar>\\n<router-outlet></router-outlet>\\n\"","export default \"<!-- <table class=\\\"table table-hover\\\">\\n  <tr *ngFor=\\\"let exam of service.list\\\">\\n    <td (click)=\\\"populateForm(exam)\\\">{{exam.id}}-{{exam.infraction}}</td>\\n    <td (click)=\\\"populateForm(exam)\\\">FistTia:{{exam.firstTia}}</td>\\n    <td><button (click)=\\\"onDelete(exam.id)\\\" class=\\\"btn btn-sm btn-outline-danger\\\">X</button></td>\\n  </tr>\\n</table> -->\\n<div class=\\\"m-5\\\">\\n  <h1 class=\\\"mb-3\\\">Observations:</h1>\\n  <table [hidden]=\\\"!showTable\\\" datatable [dtOptions]=\\\"dtOptions\\\" class=\\\"row-border hover m-5\\\">\\n    <thead>\\n      <tr>\\n        <th>Observation Id</th>\\n        <th>Patient Id</th>\\n        <th>Atrial Fibrillation</th>\\n        <th>Body weakness</th>\\n        <th>First TIA</th>\\n        <th>Gait disturbance</th>\\n        <th>High glucose (≥15 mmol/L)</th>\\n        <th>Infraction (on computed tomography)</th>\\n        <th>Initial DBP</th>\\n        <th>Speech difficulties</th>\\n        <th>Vertigo</th>\\n        <th>firstClassPrediction</th>\\n        <th>secondClassPrediction</th>\\n        <th>TIA occured in two weeks</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let exam of examinations\\\">\\n        <td>{{ exam.id }}</td>\\n        <td>{{ exam.patientId }}</td>\\n        <td>{{ exam.atrialFibrillation }}</td>\\n        <td>{{ exam.bodyWeakness }}</td>\\n        <td>{{ exam.firstTia }}</td>\\n        <td>{{ exam.gaitDisturb }}</td>\\n        <td>{{ exam.highGlucose }}</td>\\n        <td>{{ exam.infraction }}</td>\\n        <td>{{ exam.initialDbp }}</td>\\n        <td>{{ exam.speechDif }}</td>\\n        <td>{{ exam.vertigo }}</td>\\n        <td>{{ exam.firstClassPrediction }}</td>\\n        <td>{{ exam.secondClassPrediction }}</td>\\n        <td>{{ exam.tiaInTwoWeeksOccured }}</td>\\n      </tr>\\n    </tbody>\\n    <tfoot>\\n      <tr>\\n        <th>Observation Id</th>\\n        <th>Patient Id</th>\\n        <th>Atrial Fibrillation</th>\\n        <th>Body weakness</th>\\n        <th>First TIA</th>\\n        <th>Gait disturbance</th>\\n        <th>High glucose (≥15 mmol/L)</th>\\n        <th>Infraction (on computed tomography)</th>\\n        <th>Initial DBP</th>\\n        <th>Speech difficulties</th>\\n        <th>Vertigo</th>\\n        <th>firstClassPrediction</th>\\n        <th>secondClassPrediction</th>\\n        <th>TIA occured in two weeks</th>\\n      </tr>\\n    </tfoot>\\n  </table>\\n</div>\\n\"","export default \"<form #form=\\\"ngForm\\\" (submit)=\\\"onSubmit(form)\\\" autocomplete=\\\"off\\\" class=\\\"m-5\\\">\\n  <input type=\\\"hidden\\\" name=\\\"id\\\" #id=\\\"ngModel\\\" [(ngModel)]=\\\"service.formdata.id\\\"/>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"column\\\">\\n      <div class=\\\"form-group\\\">\\n        <label>Patient Identifier</label>\\n        <input name=\\\"patientId\\\" #patientId=\\\"ngModel\\\" [(ngModel)]=\\\"service.formdata.patientId\\\" class=\\\"form-check-input\\\" type=\\\"number\\\" readonly>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label>TIA occured (fill in two weeks after the TIA occurrence)</label>\\n        <input name=\\\"tiaInTwoWeeksOccured\\\" #tiaInTwoWeeksOccured=\\\"ngModel\\\" [(ngModel)]=\\\"service.formdata.tiaInTwoWeeksOccured\\\" class=\\\"form-control\\\" type=\\\"checkbox\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"column\\\">\\n      <div class=\\\"form-group\\\">\\n        <label>firstClassPrediction</label>\\n        <input name=\\\"firstClassPrediction\\\" #firstClassPrediction=\\\"ngModel\\\" [(ngModel)]=\\\"service.formdata.firstClassPrediction\\\" class=\\\"form-control\\\" type=\\\"number\\\" disabled>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label>secondClassPrediction</label>\\n        <input name=\\\"secondClassPrediction\\\" #secondClassPrediction=\\\"ngModel\\\" [(ngModel)]=\\\"service.formdata.secondClassPrediction\\\" class=\\\"form-control\\\" type=\\\"number\\\" disabled>\\n      </div>\\n    </div>\\n  </div>\\n  <mat-tab-group>\\n    <mat-tab label=\\\"Examinations\\\">\\n      <div class=\\\"form-group\\\">\\n        <label>Infraction (on computed tomography)</label>\\n        <input name=\\\"infraction\\\" #infraction=\\\"ngModel\\\" [(ngModel)]=\\\"service.formdata.infraction\\\" class=\\\"form-control\\\" type=\\\"number\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label>Initial DBP</label>\\n        <input name=\\\"initialDbp\\\" #initialDbp=\\\"ngModel\\\" [(ngModel)]=\\\"service.formdata.initialDbp\\\" class=\\\"form-control\\\" type=\\\"number\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label>Atrial Fibrillation</label>\\n        <input name=\\\"atrialFibrillation\\\" #atrialFibrillation=\\\"ngModel\\\" [(ngModel)]=\\\"service.formdata.atrialFibrillation\\\" class=\\\"form-check-input\\\" type=\\\"checkbox\\\">\\n      </div>\\n    </mat-tab>\\n    <mat-tab label=\\\"First interview with a patient\\\">\\n      <div class=\\\"form-group\\\">\\n        <label>Speech difficulties</label>\\n        <input name=\\\"speechDif\\\" #speechDif=\\\"ngModel\\\" [(ngModel)]=\\\"service.formdata.speechDif\\\" class=\\\"form-check-input\\\" type=\\\"checkbox\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label>Vertigo</label>\\n        <input name=\\\"vertigo\\\" #vertigo=\\\"ngModel\\\" [(ngModel)]=\\\"service.formdata.vertigo\\\" class=\\\"form-check-input\\\" type=\\\"checkbox\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label>Body weakness</label>\\n        <input name=\\\"bodyWeakness\\\" #bodyWeakness=\\\"ngModel\\\" [(ngModel)]=\\\"service.formdata.bodyWeakness\\\" class=\\\"form-check-input\\\" type=\\\"checkbox\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label>First TIA</label>\\n        <input name=\\\"firstTia\\\" #firstTia=\\\"ngModel\\\" [(ngModel)]=\\\"service.formdata.firstTia\\\" class=\\\"form-check-input\\\" type=\\\"checkbox\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label>Gait disturbance</label>\\n        <input name=\\\"gaitDisturb\\\" #gaitDisturb=\\\"ngModel\\\" [(ngModel)]=\\\"service.formdata.gaitDisturb\\\" class=\\\"form-check-input\\\" type=\\\"checkbox\\\">\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label>High glucose (≥15 mmol/L)</label>\\n        <input name=\\\"highGlucose\\\" #highGlucose=\\\"ngModel\\\" [(ngModel)]=\\\"service.formdata.highGlucose\\\" class=\\\"form-check-input\\\" type=\\\"checkbox\\\">\\n      </div>\\n    </mat-tab>\\n  </mat-tab-group>\\n  <div class=\\\"form-group btn-group w-100 m-5\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"backClicked()\\\">BACK</button>\\n    <button type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\" class=\\\"btn btnprimary\\\">SUBMIT</button>\\n  </div>\\n</form>\\n\"","export default \"<div class=\\\"jumbotron\\\">\\n  <h1 class=\\\"display-4 text-center\\\">Examination Register</h1>\\n  <hr>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-5\\\">\\n      <app-examination>\\n\\n      </app-examination>\\n    </div>\\n    <div class=\\\"col-md-5\\\">\\n      <app-examination-list>\\n\\n      </app-examination-list>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<p>menu works!</p>\\n\"","export default \"<!-- <table class=\\\"table table-hover\\\">\\n  <tr *ngFor=\\\"let exam of service.list\\\">\\n    <td (click)=\\\"populateForm(exam)\\\">{{exam.id}}-{{exam.infraction}}</td>\\n    <td (click)=\\\"populateForm(exam)\\\">FistTia:{{exam.firstTia}}</td>\\n    <td><button (click)=\\\"onDelete(exam.id)\\\" class=\\\"btn btn-sm btn-outline-danger\\\">X</button></td>\\n  </tr>\\n</table> -->\\n<app-patient *ngIf=\\\"editPatient\\\" (backClick)=\\\"toogleEditPatient()\\\" (patientAdded)=\\\"onPatientAdded($event)\\\" (patientUpdated)=\\\"onPatientUpdated($event)\\\" [patientId]=\\\"selectedPatientId\\\">\\n</app-patient>\\n<app-examination *ngIf=\\\"editPatientExamination\\\" (backClick)=\\\"toogleEditPatientExaminations()\\\"[examination]=\\\"selectedPatientExamination\\\" [patientId]=\\\"selectedPatientId\\\">\\n</app-examination>\\n<div class=\\\"m-5\\\" *ngIf=\\\"!editPatientExamination && !editPatient\\\">\\n  <div class=\\\"w-100 m-5\\\">\\n    <h1 class=\\\"mb-3 d-inline-block w-50\\\">Patients:</h1>\\n    <button class=\\\"d-inline-block w-50 btn btn-info\\\" (click)=\\\"showPatient()\\\">Add new patient</button>\\n  </div>\\n  <table [hidden]=\\\"!showTable\\\" datatable [dtOptions]=\\\"dtOptions\\\" class=\\\"row-border hover m-5\\\">\\n    <thead>\\n      <tr>\\n        <th>Patient Id</th>\\n        <th>Surname</th>\\n        <th>Age</th>\\n        <th>Observations</th>\\n        <th>Edit Patient</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let patient of patients\\\">\\n        <td>{{ patient.id }}</td>\\n        <td>{{ patient.surname }}</td>\\n        <td>{{ patient.age }}</td>\\n        <td>\\n          <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"showPatientExaminations(patient)\\\">Observations</button>\\n        </td>\\n        <td>\\n          <button type=\\\"button\\\" class=\\\"btn btn-info\\\" (click)=\\\"showPatient(patient)\\\">Edit</button>\\n        </td>\\n      </tr>\\n    </tbody>\\n    <tfoot>\\n      <tr>\\n        <th>Patient Id</th>\\n        <th>Surname</th>\\n        <th>Age</th>\\n        <th>Observations</th>\\n        <th>Edit Patient</th>\\n      </tr>\\n    </tfoot>\\n    </table>\\n</div>\\n\"","export default \"<form #form=\\\"ngForm\\\" (submit)=\\\"onSubmit(form)\\\" autocomplete=\\\"off\\\" class=\\\"m-5\\\">\\n  <input type=\\\"hidden\\\" name=\\\"id\\\" #id=\\\"ngModel\\\" [(ngModel)]=\\\"service.formdata.id\\\"/>\\n  <div class=\\\"form-group\\\" [hidden]=\\\"service.formdata.id! == null\\\">\\n    <label>Patient Id</label>\\n    <input name=\\\"id\\\" #id=\\\"ngModel\\\" [(ngModel)]=\\\"service.formdata.id\\\" class=\\\"form-check-input\\\" type=\\\"number\\\" readonly>\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Surname</label>\\n    <input name=\\\"surname\\\" #surname=\\\"ngModel\\\" [(ngModel)]=\\\"service.formdata.surname\\\" class=\\\"form-check-input\\\" type=\\\"text\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label>Age</label>\\n    <input name=\\\"age\\\" #age=\\\"ngModel\\\" [(ngModel)]=\\\"service.formdata.age\\\" class=\\\"form-check-input\\\" type=\\\"number\\\">\\n  </div>\\n  <div class=\\\"form-group btn-group w-100 m-5\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"backClicked()\\\">BACK</button>\\n    <button type=\\\"submit\\\" [disabled]=\\\"form.invalid\\\" class=\\\"btn btnprimary\\\">SUBMIT</button>\\n  </div>\\n</form>\\n\"","export default \"<div class=\\\"jumbotron\\\">\\n  <h1 class=\\\"display-4 text-center\\\">Patient Register</h1>\\n  <hr>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-5\\\">\\n      <app-patient>\\n\\n      </app-patient>\\n    </div>\\n    <div class=\\\"col-md-5\\\">\\n      <app-patient-list>\\n\\n      </app-patient-list>\\n    </div>\\n  </div>\\n</div>\\n\"","export default \"<div class=\\\"m-5 w-100\\\">\\n  <div class=\\\"w-25 d-inline-block mx-5 align-top\\\">\\n    <h2>FirstClassPrediction frequency:</h2>\\n    <ngx-charts-pie-chart [results]=\\\"predictionsFrequency\\\" [labels]=\\\"true\\\" [legend]=\\\"true\\\" [gradient]=\\\"true\\\">\\n    </ngx-charts-pie-chart>\\n  </div>\\n  <div class=\\\"w-25 d-inline-block mx-5 align-top\\\">\\n    <h2>Age frequency:</h2>\\n    <ngx-charts-bar-vertical [results]=\\\"ageFrequency\\\" [gradient]=\\\"true\\\" [xAxis]=\\\"true\\\" [yAxis]=\\\"true\\\" [xAxisLabel]=\\\"'Ages range'\\\" [showXAxisLabel]=\\\"true\\\" [showYAxisLabel]=\\\"true\\\" [yAxisLabel]=\\\"'Frequency'\\\">\\n    </ngx-charts-bar-vertical>\\n  </div>\\n  <div class=\\\"w-30 d-inline-block mx-5 align-top\\\">\\n    <h2>Tia occured frequency:</h2>\\n    <ngx-charts-pie-grid [results]=\\\"tiaOccuredFrequency\\\">\\n    </ngx-charts-pie-grid>\\n  </div>\\n  <div class=\\\"w-50 d-inline-block p-5\\\" style=\\\"max-height: 250px;\\\">\\n    <h2>Observations ratio - TIA occured:</h2>\\n    <ngx-charts-bar-horizontal [results]=\\\"observationsRatioTiaOccured\\\" [gradient]=\\\"true\\\" [xScaleMax]=1 [showDataLabel]=\\\"true\\\" [xAxis]=\\\"true\\\" [yAxis]=\\\"true\\\" [yAxisLabel]=\\\"'Observations'\\\" [showYAxisLabel]=\\\"true\\\" [xAxisLabel]=\\\"'Ratio'\\\" [showXAxisLabel]=\\\"true\\\">\\n    </ngx-charts-bar-horizontal>\\n  </div>\\n  <div class=\\\"w-50 d-inline-block p-5\\\" style=\\\"max-height: 250px;\\\">\\n    <h2>Observations ratio - TIA not occured:</h2>\\n    <ngx-charts-bar-horizontal [results]=\\\"observationsRatioTiaNotOccured\\\" [gradient]=\\\"true\\\" [xScaleMax]=1 [showDataLabel]=\\\"true\\\" [xAxis]=\\\"true\\\" [yAxis]=\\\"true\\\" [yAxisLabel]=\\\"'Observations'\\\" [showYAxisLabel]=\\\"true\\\" [xAxisLabel]=\\\"'Ratio'\\\" [showXAxisLabel]=\\\"true\\\">\\n    </ngx-charts-bar-horizontal>\\n  </div>\\n</div>\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ExaminationListComponent } from 'src/app/examinations/examination-list/examination-list.component';\r\nimport { PatientListComponent } from 'src/app/patients/patient-list/patient-list.component';\r\nimport { StatisticsComponent } from 'src/app/statistics/statistics.component';\r\nimport { MenuComponent } from 'src/app/menu/menu.component';\r\nimport { ExaminationsResolverService } from './service/examinations-resolver.service';\r\nimport { PatientsResolverService } from './service/patients-resolver.service';\r\n\r\nconst routes: Routes = [\r\n    {\r\n      path: '',\r\n      redirectTo: 'patients',\r\n      pathMatch: 'full'\r\n    },\r\n    {\r\n        path: 'observations',\r\n        component: ExaminationListComponent,\r\n        resolve: { examinations: ExaminationsResolverService }\r\n    },\r\n    {\r\n      path: 'patients',\r\n      component: PatientListComponent,\r\n      resolve: { patients: PatientsResolverService }\r\n    },\r\n    {\r\n        path: 'statistics',\r\n        component: StatisticsComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","export default \".example-spacer {\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFjO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1zcGFjZXIge1xyXG4gIGZsZXg6IDEgMSBhdXRvO1xyXG59XHJcbiJdfQ== */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'PatientDiagnosis';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { MatToolbarModule, MatIconModule, MatSidenavModule, MatListModule, MatButtonModule } from '@angular/material';\nimport {MatTabsModule} from '@angular/material/tabs';\n\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { DataTablesModule } from 'angular-datatables';\n\nimport { AppComponent } from './app.component';\nimport { ExaminationsComponent } from './examinations/examinations.component';\nimport { ExaminationComponent } from './examinations/examination/examination.component';\nimport { ExaminationListComponent } from './examinations/examination-list/examination-list.component';\nimport { ExaminationService } from './service/examination.service';\nimport { PatientsComponent } from './patients/patients.component';\nimport { PatientComponent } from './patients/patient/patient.component';\nimport { PatientListComponent } from './patients/patient-list/patient-list.component';\nimport { PatientService } from './service/patient.service';\nimport { StatisticsService } from './service/statistics.service';\nimport { MenuComponent } from './menu/menu.component';\nimport { StatisticsComponent } from './statistics/statistics.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ExaminationsComponent,\n    ExaminationComponent,\n    ExaminationListComponent,\n    PatientsComponent,\n    PatientComponent,\n    PatientListComponent,\n    MenuComponent,\n    StatisticsComponent\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    MatToolbarModule,\n    MatSidenavModule,\n    MatListModule,\n    MatButtonModule,\n    MatIconModule,\n    DataTablesModule,\n    NgxChartsModule,\n    MatTabsModule\n  ],\n  providers: [ExaminationService, PatientService, StatisticsService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V4YW1pbmF0aW9ucy9leGFtaW5hdGlvbi1saXN0L2V4YW1pbmF0aW9uLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ExaminationService } from 'src/app/service/examination.service';\nimport { Examination } from 'src/app/model/examination.model';\nimport { ToastrService } from 'ngx-toastr';\nimport { ActivatedRoute } from '@angular/router';\ndeclare var jquery: any;\n\n@Component({\n  selector: 'app-examination-list',\n  templateUrl: './examination-list.component.html',\n  styleUrls: ['./examination-list.component.css']\n})\nexport class ExaminationListComponent implements OnInit {\n  dtOptions: DataTables.Settings = {};\n  public examinations: Examination[];\n  public showTable: boolean;\n\n  constructor(\n    private service: ExaminationService,\n    private toastr: ToastrService,\n    private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.activatedRoute.data.subscribe(data => this.examinations = data.examinations as Examination[]);\n    this.showTable = false;\n    this.dtOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 10,\n      deferRender: true,\n      initComplete: (settings, json) => {\n        this.showTable = true;\n      }\n    };\n  }\n\n  populateForm(exam: Examination) {\n    this.service.formdata = Object.assign({}, exam);\n  }\n\n  refreshList() {\n    this.service.getPatients().subscribe(data => this.examinations = data as Examination[]);\n  }\n\n  onDelete(id: number) {\n    if (confirm('Are you sure to delete this record?')){\n      this.service.deleteExamination(id).subscribe(res => {\n        this.refreshList();\n        this.toastr.warning('Deleted successfully', 'EXAM deleted');\n      });\n    }\n  }\n}\n","export default \"input{\\r\\n  margin-top: 5px;\\r\\n  margin-left: 15px;\\r\\n}\\r\\n\\r\\nlabel {\\r\\n  margin-top: 5px;\\r\\n}\\r\\n\\r\\n* {\\r\\n  box-sizing: border-box;\\r\\n}\\r\\n\\r\\n.column {\\r\\n  float: left;\\r\\n  width: 50%;\\r\\n  padding: 10px;\\r\\n  height: 300px;\\r\\n}\\r\\n\\r\\n.row:after {\\r\\n  content: \\\"\\\";\\r\\n  display: table;\\r\\n  clear: both;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZXhhbWluYXRpb25zL2V4YW1pbmF0aW9uL2V4YW1pbmF0aW9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFlO0VBQ2YsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxVQUFVO0VBQ1YsYUFBYTtFQUNiLGFBQWE7QUFDZjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxjQUFjO0VBQ2QsV0FBVztBQUNiIiwiZmlsZSI6InNyYy9hcHAvZXhhbWluYXRpb25zL2V4YW1pbmF0aW9uL2V4YW1pbmF0aW9uLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpbnB1dHtcclxuICBtYXJnaW4tdG9wOiA1cHg7XHJcbiAgbWFyZ2luLWxlZnQ6IDE1cHg7XHJcbn1cclxuXHJcbmxhYmVsIHtcclxuICBtYXJnaW4tdG9wOiA1cHg7XHJcbn1cclxuXHJcbioge1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbn1cclxuXHJcbi5jb2x1bW4ge1xyXG4gIGZsb2F0OiBsZWZ0O1xyXG4gIHdpZHRoOiA1MCU7XHJcbiAgcGFkZGluZzogMTBweDtcclxuICBoZWlnaHQ6IDMwMHB4O1xyXG59XHJcblxyXG4ucm93OmFmdGVyIHtcclxuICBjb250ZW50OiBcIlwiO1xyXG4gIGRpc3BsYXk6IHRhYmxlO1xyXG4gIGNsZWFyOiBib3RoO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ExaminationService } from 'src/app/service/examination.service';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\nimport { Patient } from 'src/app/model/patient.model';\nimport { Examination } from 'src/app/model/examination.model';\nimport { async } from '@angular/core/testing';\nimport { Observable } from 'rxjs';\nimport * as signalR from '@aspnet/signalr';\n\n@Component({\n  selector: 'app-examination',\n  templateUrl: './examination.component.html',\n  styleUrls: ['./examination.component.css']\n})\nexport class ExaminationComponent implements OnInit {\n  @Input() examination: Observable<Examination>;\n  @Input() patientId;\n  @Output() backClick: EventEmitter<any> = new EventEmitter();\n\n  public hubConnection: signalR.HubConnection;\n\n  constructor(\n    private service: ExaminationService,\n    private toastr: ToastrService) {}\n\n\n  ngOnInit() {\n    this.service.formdata = {\n      id: null,\n      patientId: this.patientId,\n      atrialFibrillation: false,\n      bodyWeakness: false,\n      firstTia: false,\n      gaitDisturb: false,\n      highGlucose: false,\n      infraction: 0,\n      initialDbp: 0,\n      speechDif: false,\n      vertigo: false,\n      firstClassPrediction: 0,\n      secondClassPrediction: 0,\n      tiaInTwoWeeksOccured: false\n    };\n\n    this.resetForm();\n    this.startSignalRConnection();\n    this.addPredictionListener();\n  }\n\n  resetForm(form?: NgForm) {\n    if (form != null) {\n      form.resetForm();\n    }\n\n    if (this.examination == null){\n      this.service.formdata = {\n        id: null,\n        patientId: null,\n        atrialFibrillation: false,\n        bodyWeakness: false,\n        firstTia: false,\n        gaitDisturb: false,\n        highGlucose: false,\n        infraction: 0,\n        initialDbp: 0,\n        speechDif: false,\n        vertigo: false,\n        firstClassPrediction: 0,\n        secondClassPrediction: 0,\n        tiaInTwoWeeksOccured: false\n      };\n    } else {\n      this.examination.subscribe((res) => this.service.formdata = res);\n    }\n  }\n\n  startSignalRConnection() {\n    this.hubConnection = new signalR.HubConnectionBuilder()\n                                    .withUrl('https://localhost:44319/predictions')\n                                    .build();\n\n    this.hubConnection\n      .start()\n      .then(() => console.log('Connection started'))\n      .catch(err => console.log('Error while starting connection: ' + err))\n  }\n\n  addPredictionListener() {\n    this.hubConnection.on('prediction', (prediction) => {\n      const predictionObject = JSON.parse(prediction);\n      this.service.formdata.firstClassPrediction = predictionObject.FirstClassPrediction.toFixed(2);\n      this.service.formdata.secondClassPrediction = predictionObject.SecondClassPrediction.toFixed(2);\n      console.log(predictionObject);\n    });\n  }\n\n  onSubmit(form: NgForm) {\n    console.log(form.value);\n    if (form.value.id == null) {\n      delete form.value.id;\n      this.insertRecord(form);\n    } else {\n      this.updateRecord(form);\n    }\n    // this.resetForm(form);\n    this.service.refreshList();\n  }\n\n  insertRecord(form: NgForm) {\n    this.service.postExamination(form.value).subscribe(res => {\n      this.toastr.success('Inserted successfully', 'EXAM register');\n    });\n  }\n\n  updateRecord(form: NgForm) {\n    this.service.putExamination(form.value).subscribe(res => {\n      this.toastr.success('Updated successfully', 'EXAM updated');\n    });\n  }\n\n  backClicked(){\n    this.backClick.emit(null);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V4YW1pbmF0aW9ucy9leGFtaW5hdGlvbnMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-examinations',\n  templateUrl: './examinations.component.html',\n  styleUrls: ['./examinations.component.css']\n})\nexport class ExaminationsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lbnUvbWVudS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhdGllbnRzL3BhdGllbnQtbGlzdC9wYXRpZW50LWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { PatientService } from 'src/app/service/patient.service';\nimport { ExaminationService } from 'src/app/service/examination.service';\nimport { Patient } from 'src/app/model/patient.model';\nimport { Examination } from 'src/app/model/examination.model';\nimport { ToastrService } from 'ngx-toastr';\nimport { ActivatedRoute } from '@angular/router';\ndeclare var jquery: any;\n\n@Component({\n  selector: 'app-patient-list',\n  templateUrl: './patient-list.component.html',\n  styleUrls: ['./patient-list.component.css']\n})\nexport class PatientListComponent implements OnInit {\n  dtOptions: DataTables.Settings = {};\n  public patients: Patient[];\n  public showTable: boolean;\n  editPatientExamination = false;\n  editPatient = false;\n  selectedPatientId = null;\n  selectedPatientExamination: Examination = null;\n\n  constructor(\n    private patientService: PatientService,\n    private examinationService: ExaminationService,\n    private toastr: ToastrService,\n    private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.activatedRoute.data.subscribe(data => this.patients = data.patients as Patient[])\n    this.showTable = false;\n    this.dtOptions = {\n      pagingType: 'full_numbers',\n      pageLength: 10,\n      deferRender: true,\n      initComplete: (settings, json) => {\n        this.showTable = true;\n      }\n    };\n  }\n\n  populateForm(patient: Patient) {\n    this.patientService.formdata = Object.assign({}, patient);\n  }\n\n  onDelete(id: number) {\n    if (confirm('Are you sure to delete this record?')){\n      this.patientService.deletePatient(id).subscribe(res => {\n        this.refreshList();\n        this.toastr.warning('Deleted successfully', 'PATIENT deleted');\n      });\n    }\n  }\n\n  toogleEditPatientExaminations() {\n    this.editPatientExamination = this.editPatientExamination ? false : true;\n  }\n\n  toogleEditPatient() {\n    this.editPatient = this.editPatient ? false : true;\n  }\n\n  refreshList() {\n    this.patientService.getPatients().subscribe(data => this.patients = data as Patient[]);\n  }\n\n  public showPatientExaminations(patient) {\n    this.selectedPatientId = patient.id;\n    this.selectedPatientExamination = this.examinationService.getByPatient(patient.id);\n    this.toogleEditPatientExaminations();\n  }\n\n  public showPatient(patient) {\n    if (patient) {\n      this.selectedPatientId = patient.id;\n    }\n    else {\n      this.selectedPatientId = undefined;\n    }\n    this.toogleEditPatient();\n  }\n\n  public onPatientAdded(patient) {\n    this.refreshList();\n  }\n\n  public onPatientUpdated(patient) {\n    console.log(patient);\n    const indexToUpdate = this.patients.findIndex(item => item.id === patient.id);\n    this.patients[indexToUpdate] = patient;\n  }\n}\n","export default \"input{\\r\\n  margin: 5px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGF0aWVudHMvcGF0aWVudC9wYXRpZW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2IiLCJmaWxlIjoic3JjL2FwcC9wYXRpZW50cy9wYXRpZW50L3BhdGllbnQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImlucHV0e1xyXG4gIG1hcmdpbjogNXB4O1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { PatientService } from 'src/app/service/patient.service';\nimport { NgForm } from '@angular/forms';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-patient',\n  templateUrl: './patient.component.html',\n  styleUrls: ['./patient.component.css']\n})\nexport class PatientComponent implements OnInit {\n  @Input() patientId;\n  @Output() backClick: EventEmitter<any> = new EventEmitter();\n  @Output() patientUpdated: EventEmitter<any> = new EventEmitter();\n  @Output() patientAdded: EventEmitter<any> = new EventEmitter();\n\n  constructor(\n    private service: PatientService,\n    private toastr: ToastrService) { }\n\n  ngOnInit() {\n    this.service.formdata = {\n      id: null,\n      surname: '',\n      age: 0\n    };\n\n    if (this.patientId != undefined) {\n      this.service.getPatient(this.patientId).subscribe(patient => this.service.formdata = patient);\n    }\n\n    this.resetForm();\n  }\n\n  resetForm(form?: NgForm) {\n    if (form != null) {\n      form.resetForm();\n    }\n\n    this.service.formdata = {\n      id: null,\n      surname: '',\n      age: 0\n    };\n  }\n\n  onSubmit(form: NgForm) {\n    if (form.value.id == null) {\n      delete form.value.id;\n      this.insertRecord(form);\n      this.resetForm(form);\n    } else {\n      this.updateRecord(form);\n    }\n    this.service.refreshList();\n  }\n\n  insertRecord(form: NgForm) {\n    this.service.postPatient(form.value).subscribe(res => {\n      this.toastr.success('Inserted successfully', 'PATIENT register');\n      this.patientAdded.emit(form.value);\n    });\n  }\n\n  updateRecord(form: NgForm) {\n    this.service.putPatient(form.value).subscribe(res => {\n      this.toastr.success('Updated successfully', 'PATIENT updated');\n      console.log(form.value);\n      this.patientUpdated.emit(form.value);\n    });\n  }\n\n  backClicked(){\n    this.backClick.emit(null);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhdGllbnRzL3BhdGllbnRzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-patients',\n  templateUrl: './patients.component.html',\n  styleUrls: ['./patients.component.css']\n})\nexport class PatientsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Examination } from '../model/examination.model';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExaminationService {\n  formdata: Examination;\n  list: Examination[];\n  readonly rootURL = 'https://0c9715e4e56f.ngrok.io/api/examinations/'\n\n  constructor(private http: HttpClient) { }\n\n  getByPatient(id: any): any {\n    return this.http.get(this.rootURL + 'getByPatient/' + id + '/')\n  }\n\n  postExamination(formData: Examination) {\n    return this.http.post(this.rootURL, formData);\n   }\n\n  putExamination(formData: Examination) {\n  return this.http.put(this.rootURL + formData.id + '/', formData);\n  }\n\n  deleteExamination(id: number) {\n    return this.http.delete(this.rootURL + id + '/');\n    }\n\n  getPatients() {\n    return this.http.get(this.rootURL) as Observable<Examination[]>;\n  }\n\n  refreshList() {\n    this.http.get(this.rootURL)\n      .toPromise().then(res => this.list = res as Examination[]);\n  }\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Examination } from '../model/examination.model';\nimport { ExaminationService } from './examination.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExaminationsResolverService implements Resolve<Examination[]> {\n\n  constructor(private examinationsService: ExaminationService) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Examination[] | import(\"rxjs\").Observable<Examination[]> | Promise<Examination[]> {\n    return this.examinationsService.getPatients();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Patient } from '../model/patient.model';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatientService {\n  formdata: Patient;\n  list: Patient[];\n  readonly rootURL = 'https://0c9715e4e56f.ngrok.io/api/patients/'\n\n  constructor(private http: HttpClient) { }\n\n  postPatient(formData: Patient) {\n    return this.http.post(this.rootURL, formData);\n   }\n\n  putPatient(formData: Patient) {\n  return this.http.put(this.rootURL + formData.id + '/', formData);\n  }\n\n  deletePatient(id: number) {\n    return this.http.delete(this.rootURL + id + '/');\n    }\n\n  getPatients() {\n    return this.http.get(this.rootURL) as Observable<Patient[]>;\n  }\n\n  getPatient(id: number) {\n    return this.http.get(this.rootURL + id + '/') as Observable<Patient>;\n  }\n\n  refreshList() {\n    this.http.get(this.rootURL)\n      .toPromise().then(res => this.list = res as Patient[]);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PatientService } from './patient.service';\nimport { Patient } from '../model/patient.model';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatientsResolverService implements Resolve<Patient[]>{\n\n  constructor(private patientsService: PatientService) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Patient[] | import(\"rxjs\").Observable<Patient[]> | Promise<Patient[]> {\n    return this.patientsService.getPatients();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { PatientService } from 'src/app/service/patient.service';\nimport { ExaminationService } from 'src/app/service/examination.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StatisticsService {\n  readonly rootURL = 'https://0c9715e4e56f.ngrok.io/api/statistics/'\n\n  constructor(private http: HttpClient,\n    private examinationService: ExaminationService,\n    private patientService: PatientService) { }\n\n  getPatients() {\n    this.patientService.refreshList();\n    return this.patientService.list;\n  }\n\n  getExaminations() {\n    this.examinationService.refreshList();\n    return this.examinationService.list;\n  }\n\n  getPredictionsFrequency() {\n    return this.http.get(this.rootURL + 'GetPredictionsFrequency');\n  }\n\n  getAgeFrequency() {\n    return this.http.get(this.rootURL + 'GetAgeFrequency');\n  }\n\n  getTiaOccuredFrequency() {\n    return this.http.get(this.rootURL + 'GetTiaOccuredFrequency');\n  }\n\n  GetObservationsRatioByTiaOccured(occured) {\n    return this.http.get(this.rootURL + 'GetObservationsRatioByTiaOccured/' + occured);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0YXRpc3RpY3Mvc3RhdGlzdGljcy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { StatisticsService } from '../service/statistics.service';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n\n@Component({\n  selector: 'app-statistics',\n  templateUrl: './statistics.component.html',\n  styleUrls: ['./statistics.component.css']\n})\nexport class StatisticsComponent implements OnInit {\n  patients: null;\n  examinations: null;\n  predictionsFrequency: any[];\n  tiaOccuredFrequency: any[];\n  observationsRatioTiaOccured: any[];\n  observationsRatioTiaNotOccured: any[];\n  ageFrequency: any[];\n\n  constructor(private statisticsService: StatisticsService) { }\n\n  ngOnInit() {\n    // this.patients = this.statisticsService.getPatients();\n    // this.examinations = this.statisticsService.getExaminations();\n    this.statisticsService.getPredictionsFrequency()\n      .subscribe(res => {\n        if (res instanceof Array) {\n          this.predictionsFrequency = res.map(prediction => ({name: prediction.roandedPrediction.toString(), value: prediction.frequency.toString()}))\n        }\n      });\n\n    this.statisticsService.getAgeFrequency()\n      .subscribe(res => {\n        if (res instanceof Array) {\n          this.ageFrequency = res.map(age => ({name: `${age.downAgeBoundary}-${age.upAgeBoundary}`, value: age.frequency}));\n        }\n      });\n\n    this.statisticsService.getTiaOccuredFrequency()\n      .subscribe(res => {\n        if (res instanceof Array) {\n          this.tiaOccuredFrequency = res.map(tia => ({name: tia.occured, value: tia.frequency}));\n        }\n      });\n\n    this.statisticsService.GetObservationsRatioByTiaOccured(true)\n      .subscribe(res => {\n        if (res instanceof Array) {\n          this.observationsRatioTiaOccured = res.map(observation => ({name: observation.observationName, value: observation.ratio}));\n        }\n      });\n\n    this.statisticsService.GetObservationsRatioByTiaOccured(false)\n      .subscribe(res => {\n        if (res instanceof Array) {\n          this.observationsRatioTiaNotOccured = res.map(observation => ({name: observation.observationName, value: observation.ratio}));\n        }\n      });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}